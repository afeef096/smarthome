#include <SPI.h>
#include <MFRC522.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <SoftwareSerial.h>

#define SS_PIN 10
#define RST_PIN 9
MFRC522 rfid(SS_PIN, RST_PIN);

#define BUZZER_PIN 5
#define GREEN_LED_PIN 3
#define RED_LED_PIN 4

#define BT_RX_PIN 2
#define BT_TX_PIN 7

SoftwareSerial btSerial(BT_RX_PIN, BT_TX_PIN);

LiquidCrystal_I2C lcd(0x27, 16, 2);

String authorizedUID = "53A7ACE4";

void setup() {
  Serial.begin(9600);        
  btSerial.begin(9600);      
  
  SPI.begin();
  rfid.PCD_Init();
  
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("Smart Security");
  lcd.setCursor(0, 1);
  lcd.print("System");
  
  pinMode(GREEN_LED_PIN, OUTPUT);
  pinMode(RED_LED_PIN, OUTPUT);
  pinMode(BUZZER_PIN, OUTPUT);

  digitalWrite(GREEN_LED_PIN, LOW);
  digitalWrite(RED_LED_PIN, LOW);
  digitalWrite(BUZZER_PIN, LOW);
  
  Serial.println("Scan RFID Tag to start");    
  delay(2000);  
}

void loop() {
  if (btSerial.available()) {
    String command = btSerial.readString();  
    Serial.println("Received command: " + command);  

    if (command == "A") {  
      Serial.println("System Armed");
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("System Armed");
      digitalWrite(GREEN_LED_PIN, HIGH);  
      digitalWrite(RED_LED_PIN, LOW);    
      digitalWrite(BUZZER_PIN, LOW);     
      delay(2000);  
      digitalWrite(GREEN_LED_PIN, LOW);
      lcd.setCursor(0,0);
      lcd.print("Security System");
      lcd.setCursor(0,1);
      lcd.print("Scan Card");  
    }
    else if (command == "D") {  
      Serial.println("System Disarmed");
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("System Disarmed");
      delay(2000);
      
      digitalWrite(RED_LED_PIN, HIGH);    
      digitalWrite(GREEN_LED_PIN, LOW);   
      digitalWrite(BUZZER_PIN, HIGH);     
      delay(2000);  
      digitalWrite(BUZZER_PIN, LOW);     
      digitalWrite(RED_LED_PIN, LOW);
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("SECURITY SYSTEM");
      lcd.setCursor(0,1);
      lcd.print("Scan Card");
          
    }
  }

   
  if (!rfid.PICC_IsNewCardPresent()) {
    return;
  }
  if (!rfid.PICC_ReadCardSerial()) {
    return;
  }

  String uid = "";
  for (byte i = 0; i < rfid.uid.size; i++) {
    uid += String(rfid.uid.uidByte[i] < 0x10 ? "0" : "");
    uid += String(rfid.uid.uidByte[i], HEX);
  }

  uid.toUpperCase();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("UID: " + uid);
  Serial.println("UID: " + uid);

  if (uid == authorizedUID) {
    Serial.println("Access Granted");
    lcd.setCursor(0, 1);
    lcd.print("ACCESS GRANTED");
    digitalWrite(GREEN_LED_PIN, HIGH);  
    delay(2000);  
    digitalWrite(GREEN_LED_PIN, LOW);  
  } else {
    Serial.println("Access Denied");
    lcd.setCursor(0, 1);
    lcd.print("ACCESS DENIED");
    digitalWrite(RED_LED_PIN, HIGH);  
    digitalWrite(BUZZER_PIN, HIGH);
    delay(2000);  
    digitalWrite(RED_LED_PIN, LOW);   
    digitalWrite(BUZZER_PIN,LOW);
  }
}
